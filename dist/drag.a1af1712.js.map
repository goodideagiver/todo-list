{"version":3,"sources":["src/script/drag.js"],"names":["getDragElement","container","y","dragoverElements","querySelectorAll","reduce","closest","child","box","getBoundingClientRect","offset","top","height","element","Number","NEGATIVE_INFINITY","addDraggingFunc","targetElement","addEventListener","classList","add","remove","saveChanges","dragOverHandler","entries","getElementsByClassName","e","preventDefault","checkPos","clientY","currentlyDragging","document","querySelector","append","insertBefore"],"mappings":";;;;;;;;;;;;AACA,IAAMA,cAAc,GAAG,SAAjBA,cAAiB,CAACC,SAAD,EAAYC,CAAZ,EAAkB;AACxC,MAAMC,gBAAgB,sBAClBF,SAAS,CAACG,gBAAV,CAA2B,4BAA3B,CADkB,CAAtB;;AAGA,SAAOD,gBAAgB,CAACE,MAAjB,CACN,UAACC,OAAD,EAAUC,KAAV,EAAoB;AACnB,QAAMC,GAAG,GAAGD,KAAK,CAACE,qBAAN,EAAZ;AACA,QAAMC,MAAM,GAAGR,CAAC,GAAGM,GAAG,CAACG,GAAR,GAAcH,GAAG,CAACI,MAAJ,GAAa,CAA1C;;AACA,QAAIF,MAAM,GAAG,CAAT,IAAcA,MAAM,GAAGJ,OAAO,CAACI,MAAnC,EAA2C;AAC1C,aAAO;AAAEA,QAAAA,MAAM,EAAEA,MAAV;AAAkBG,QAAAA,OAAO,EAAEN;AAA3B,OAAP;AACA,KAFD,MAEO;AACN,aAAOD,OAAP;AACA;AACD,GATK,EAUN;AACCI,IAAAA,MAAM,EAAEI,MAAM,CAACC;AADhB,GAVM,EAaLF,OAbF;AAcA,CAlBD;;AAoBA,IAAMG,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,aAAa,EAAI;AACxCA,EAAAA,aAAa,CAACC,gBAAd,CAA+B,WAA/B,EAA4C,YAAM;AACjDD,IAAAA,aAAa,CAACE,SAAd,CAAwBC,GAAxB,CAA4B,UAA5B;AAEAH,IAAAA,aAAa,CAACC,gBAAd,CAA+B,SAA/B,EAA0C,YAAM;AAC/CD,MAAAA,aAAa,CAACE,SAAd,CAAwBE,MAAxB,CAA+B,UAA/B;AACAC,MAAAA,WAAW;AACX,KAHD;AAIA,GAPD;AAQA,CATD;;AAWA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAtB,SAAS,EAAI;AACpC,MAAMuB,OAAO,GAAGvB,SAAS,CAACwB,sBAAV,CAAiC,YAAjC,CAAhB;AACAxB,EAAAA,SAAS,CAACiB,gBAAV,CAA2B,UAA3B,EAAuC,UAAAQ,CAAC,EAAI;AAC3C;AACA;AACAA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAMC,QAAQ,GAAG5B,cAAc,CAACC,SAAD,EAAYyB,CAAC,CAACG,OAAd,CAA/B;AACA,QAAMC,iBAAiB,GAAGC,QAAQ,CAACC,aAAT,CAAuB,WAAvB,CAA1B;;AACA,QAAIJ,QAAQ,IAAI,IAAhB,EAAsB;AACrB3B,MAAAA,SAAS,CAACgC,MAAV,CAAiBH,iBAAjB;AACA,KAFD,MAEO;AACN7B,MAAAA,SAAS,CAACiC,YAAV,CAAuBJ,iBAAvB,EAA0CF,QAA1C;AACA;AACD,GAXD;AAYA,CAdD","file":"drag.a1af1712.js","sourceRoot":"..","sourcesContent":["\r\nconst getDragElement = (container, y) => {\r\n\tconst dragoverElements = [\r\n\t\t...container.querySelectorAll('.list-entry:not(.dragging)'),\r\n\t];\r\n\treturn dragoverElements.reduce(\r\n\t\t(closest, child) => {\r\n\t\t\tconst box = child.getBoundingClientRect();\r\n\t\t\tconst offset = y - box.top - box.height / 2;\r\n\t\t\tif (offset < 0 && offset > closest.offset) {\r\n\t\t\t\treturn { offset: offset, element: child };\r\n\t\t\t} else {\r\n\t\t\t\treturn closest;\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\toffset: Number.NEGATIVE_INFINITY,\r\n\t\t}\r\n\t).element;\r\n};\r\n\r\nconst addDraggingFunc = targetElement => {\r\n\ttargetElement.addEventListener('dragstart', () => {\r\n\t\ttargetElement.classList.add('dragging');\r\n\r\n\t\ttargetElement.addEventListener('dragend', () => {\r\n\t\t\ttargetElement.classList.remove('dragging');\r\n\t\t\tsaveChanges();\r\n\t\t});\r\n\t});\r\n};\r\n\r\nconst dragOverHandler = container => {\r\n\tconst entries = container.getElementsByClassName('list-entry');\r\n\tcontainer.addEventListener('dragover', e => {\r\n\t\t//console.log(getDragElement(container, e.clientY));\r\n\t\t//container.append(document.querySelector('.dragging'));\r\n\t\te.preventDefault();\r\n\t\tconst checkPos = getDragElement(container, e.clientY);\r\n\t\tconst currentlyDragging = document.querySelector('.dragging');\r\n\t\tif (checkPos == null) {\r\n\t\t\tcontainer.append(currentlyDragging);\r\n\t\t} else {\r\n\t\t\tcontainer.insertBefore(currentlyDragging, checkPos);\r\n\t\t}\r\n\t});\r\n};"]}